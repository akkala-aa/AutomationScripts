{
	"info": {
		"_postman_id": "1a6d8293-6edd-4f38-b762-751c1b0b5e3c",
		"name": "SpaceX-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//request header",
							"console.log(request);",
							"console.log('request.method' + request.method);",
							"",
							"//var ServerName = request.headers['Server'];",
							"//console.log(request.headers['Server']);",
							"",
							"//response headers",
							"",
							"console.log(responseHeaders);",
							"console.log(responseTime);",
							"console.log(responseBody);",
							"console.log(responseCode);",
							"",
							"console.log(typeof responseHeaders);",
							"console.log(typeof responseTime);",
							"console.log(typeof responseBody);",
							"console.log(typeof responseCode);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code is not null\", function () {",
							"    pm.response.to.be.not.eql(null)",
							"});",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-06/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"required\": [",
							"        \"fairings\",",
							"        \"links\",",
							"        \"static_fire_date_utc\",",
							"        \"static_fire_date_unix\",",
							"        \"tbd\",",
							"        \"net\",",
							"        \"window\",",
							"        \"rocket\",",
							"        \"success\",",
							"        \"details\",",
							"        \"crew\",",
							"        \"ships\",",
							"        \"capsules\",",
							"        \"payloads\",",
							"        \"launchpad\",",
							"        \"auto_update\",",
							"        \"launch_library_id\",",
							"        \"failures\",",
							"        \"flight_number\",",
							"        \"name\",",
							"        \"date_utc\",",
							"        \"date_unix\",",
							"        \"date_local\",",
							"        \"date_precision\",",
							"        \"upcoming\",",
							"        \"cores\",",
							"        \"id\"",
							"    ],",
							"    \"properties\": {",
							"        \"fairings\": {",
							"            \"$id\": \"#/properties/fairings\",",
							"            \"required\": [",
							"                \"reused\",",
							"                \"recovery_attempt\",",
							"                \"recovered\",",
							"                \"ships\"",
							"            ],",
							"            \"properties\": {",
							"                \"reused\": {",
							"                    \"$id\": \"#/properties/fairings/properties/reused\"",
							"                },",
							"                \"recovery_attempt\": {",
							"                    \"$id\": \"#/properties/fairings/properties/recovery_attempt\"",
							"                },",
							"                \"recovered\": {",
							"                    \"$id\": \"#/properties/fairings/properties/recovered\"",
							"                },",
							"                \"ships\": {",
							"                    \"$id\": \"#/properties/fairings/properties/ships\",",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/fairings/properties/ships/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/fairings/properties/ships/items/anyOf/0\"",
							"                            }",
							"                        ]",
							"                    }",
							"                }",
							"            }",
							"        },",
							"        \"links\": {",
							"            \"$id\": \"#/properties/links\",",
							"            \"required\": [",
							"                \"patch\",",
							"                \"reddit\",",
							"                \"flickr\",",
							"                \"presskit\",",
							"                \"webcast\",",
							"                \"youtube_id\",",
							"                \"article\",",
							"                \"wikipedia\"",
							"            ],",
							"            \"properties\": {",
							"                \"patch\": {",
							"                    \"$id\": \"#/properties/links/properties/patch\",",
							"                    \"required\": [",
							"                        \"small\",",
							"                        \"large\"",
							"                    ],",
							"                    \"properties\": {",
							"                        \"small\": {",
							"                            \"$id\": \"#/properties/links/properties/patch/properties/small\"",
							"                        },",
							"                        \"large\": {",
							"                            \"$id\": \"#/properties/links/properties/patch/properties/large\"",
							"                        }",
							"                    }",
							"                },",
							"                \"reddit\": {",
							"                    \"$id\": \"#/properties/links/properties/reddit\",",
							"                    \"required\": [",
							"                        \"campaign\",",
							"                        \"launch\",",
							"                        \"media\",",
							"                        \"recovery\"",
							"                    ],",
							"                    \"properties\": {",
							"                        \"campaign\": {",
							"                            \"$id\": \"#/properties/links/properties/reddit/properties/campaign\"",
							"                        },",
							"                        \"launch\": {",
							"                            \"$id\": \"#/properties/links/properties/reddit/properties/launch\"",
							"                        },",
							"                        \"media\": {",
							"                            \"$id\": \"#/properties/links/properties/reddit/properties/media\"",
							"                        },",
							"                        \"recovery\": {",
							"                            \"$id\": \"#/properties/links/properties/reddit/properties/recovery\"",
							"                        }",
							"                    }",
							"                },",
							"                \"flickr\": {",
							"                    \"$id\": \"#/properties/links/properties/flickr\",",
							"                    \"required\": [",
							"                        \"small\",",
							"                        \"original\"",
							"                    ],",
							"                    \"properties\": {",
							"                        \"small\": {",
							"                            \"$id\": \"#/properties/links/properties/flickr/properties/small\",",
							"                            \"items\": {",
							"                                \"$id\": \"#/properties/links/properties/flickr/properties/small/items\"",
							"                            }",
							"                        },",
							"                        \"original\": {",
							"                            \"$id\": \"#/properties/links/properties/flickr/properties/original\",",
							"                            \"items\": {",
							"                                \"$id\": \"#/properties/links/properties/flickr/properties/original/items\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                \"presskit\": {",
							"                    \"$id\": \"#/properties/links/properties/presskit\"",
							"                },",
							"                \"webcast\": {",
							"                    \"$id\": \"#/properties/links/properties/webcast\"",
							"                },",
							"                \"youtube_id\": {",
							"                    \"$id\": \"#/properties/links/properties/youtube_id\"",
							"                },",
							"                \"article\": {",
							"                    \"$id\": \"#/properties/links/properties/article\"",
							"                },",
							"                \"wikipedia\": {",
							"                    \"$id\": \"#/properties/links/properties/wikipedia\"",
							"                }",
							"            }",
							"        },",
							"        \"static_fire_date_utc\": {",
							"            \"$id\": \"#/properties/static_fire_date_utc\"",
							"        },",
							"        \"static_fire_date_unix\": {",
							"            \"$id\": \"#/properties/static_fire_date_unix\"",
							"        },",
							"        \"tbd\": {",
							"            \"$id\": \"#/properties/tbd\"",
							"        },",
							"        \"net\": {",
							"            \"$id\": \"#/properties/net\"",
							"        },",
							"        \"window\": {",
							"            \"$id\": \"#/properties/window\"",
							"        },",
							"        \"rocket\": {",
							"            \"$id\": \"#/properties/rocket\"",
							"        },",
							"        \"success\": {",
							"            \"$id\": \"#/properties/success\"",
							"        },",
							"        \"details\": {",
							"            \"$id\": \"#/properties/details\"",
							"        },",
							"        \"crew\": {",
							"            \"$id\": \"#/properties/crew\",",
							"            \"items\": {",
							"                \"$id\": \"#/properties/crew/items\"",
							"            }",
							"        },",
							"        \"ships\": {",
							"            \"$id\": \"#/properties/ships\",",
							"            \"items\": {",
							"                \"$id\": \"#/properties/ships/items\",",
							"                \"anyOf\": [",
							"                    {",
							"                        \"$id\": \"#/properties/ships/items/anyOf/0\"",
							"                    }",
							"                ]",
							"            }",
							"        },",
							"        \"capsules\": {",
							"            \"$id\": \"#/properties/capsules\",",
							"            \"items\": {",
							"                \"$id\": \"#/properties/capsules/items\"",
							"            }",
							"        },",
							"        \"payloads\": {",
							"            \"$id\": \"#/properties/payloads\",",
							"            \"items\": {",
							"                \"$id\": \"#/properties/payloads/items\",",
							"                \"anyOf\": [",
							"                    {",
							"                        \"$id\": \"#/properties/payloads/items/anyOf/0\"",
							"                    }",
							"                ]",
							"            }",
							"        },",
							"        \"launchpad\": {",
							"            \"$id\": \"#/properties/launchpad\"",
							"        },",
							"        \"auto_update\": {",
							"            \"$id\": \"#/properties/auto_update\"",
							"        },",
							"        \"launch_library_id\": {",
							"            \"$id\": \"#/properties/launch_library_id\"",
							"        },",
							"        \"failures\": {",
							"            \"$id\": \"#/properties/failures\",",
							"            \"items\": {",
							"                \"$id\": \"#/properties/failures/items\"",
							"            }",
							"        },",
							"        \"flight_number\": {",
							"            \"$id\": \"#/properties/flight_number\"",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\"",
							"        },",
							"        \"date_utc\": {",
							"            \"$id\": \"#/properties/date_utc\"",
							"        },",
							"        \"date_unix\": {",
							"            \"$id\": \"#/properties/date_unix\"",
							"        },",
							"        \"date_local\": {",
							"            \"$id\": \"#/properties/date_local\"",
							"        },",
							"        \"date_precision\": {",
							"            \"$id\": \"#/properties/date_precision\"",
							"        },",
							"        \"upcoming\": {",
							"            \"$id\": \"#/properties/upcoming\"",
							"        },",
							"        \"cores\": {",
							"            \"$id\": \"#/properties/cores\",",
							"            \"items\": {",
							"                \"$id\": \"#/properties/cores/items\",",
							"                \"anyOf\": [",
							"                    {",
							"                        \"$id\": \"#/properties/cores/items/anyOf/0\",",
							"                        \"required\": [",
							"                            \"core\",",
							"                            \"flight\",",
							"                            \"gridfins\",",
							"                            \"legs\",",
							"                            \"reused\",",
							"                            \"landing_attempt\",",
							"                            \"landing_success\",",
							"                            \"landing_type\",",
							"                            \"landpad\"",
							"                        ],",
							"                        \"properties\": {",
							"                            \"core\": {",
							"                                \"$id\": \"#/properties/cores/items/anyOf/0/properties/core\"",
							"                            },",
							"                            \"flight\": {",
							"                                \"$id\": \"#/properties/cores/items/anyOf/0/properties/flight\"",
							"                            },",
							"                            \"gridfins\": {",
							"                                \"$id\": \"#/properties/cores/items/anyOf/0/properties/gridfins\"",
							"                            },",
							"                            \"legs\": {",
							"                                \"$id\": \"#/properties/cores/items/anyOf/0/properties/legs\"",
							"                            },",
							"                            \"reused\": {",
							"                                \"$id\": \"#/properties/cores/items/anyOf/0/properties/reused\"",
							"                            },",
							"                            \"landing_attempt\": {",
							"                                \"$id\": \"#/properties/cores/items/anyOf/0/properties/landing_attempt\"",
							"                            },",
							"                            \"landing_success\": {",
							"                                \"$id\": \"#/properties/cores/items/anyOf/0/properties/landing_success\"",
							"                            },",
							"                            \"landing_type\": {",
							"                                \"$id\": \"#/properties/cores/items/anyOf/0/properties/landing_type\"",
							"                            },",
							"                            \"landpad\": {",
							"                                \"$id\": \"#/properties/cores/items/anyOf/0/properties/landpad\"",
							"                            }",
							"                        }",
							"                    }",
							"                ]",
							"            }",
							"        },",
							"        \"id\": {",
							"            \"$id\": \"#/properties/id\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema Validation', function(){",
							"    var result = tv4.validateResult(pm.response.json(), schema);",
							"    if(!result.valid){",
							"        console.log(result);",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"});",
							"",
							"pm.test(\"id is greater than 0\", function () {",
							"    pm.expect(pm.response.json().id).is.above(0);",
							"});",
							"",
							"",
							"pm.test(\"flight number is \", () => {",
							"    pm.expect(pm.response.json().flight_number).is.above(0);",
							"});",
							"",
							"pm.test(\"flight number is not null\", () => {",
							"    pm.expect(pm.response.json().flight_number).not.eql(null)",
							"});",
							"",
							"pm.test(\"heck if expected string is present\", function () {",
							"    pm.expect(pm.response.json().flight_number).to.eq(127);",
							"});",
							"",
							"",
							"pm.test(\"date_precision info is present\", function () {",
							"    pm.expect(pm.response.json().date_precision).to.eq(\"hour\");",
							"});",
							"",
							"",
							"pm.test(\"cores info is present\", function () {",
							"    pm.expect(pm.response.json().cores.flight).to.eq(8);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.spacexdata.com/v4/launches/latest/",
					"protocol": "https",
					"host": [
						"api",
						"spacexdata",
						"com"
					],
					"path": [
						"v4",
						"launches",
						"latest",
						""
					]
				}
			},
			"response": []
		}
	]
}